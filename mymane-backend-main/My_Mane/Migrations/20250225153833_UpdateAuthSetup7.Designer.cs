// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My_Mane;

#nullable disable

namespace My_Mane.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250225153833_UpdateAuthSetup7")]
    partial class UpdateAuthSetup7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("My_Mane.Model.Blogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Heading")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("publish_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("My_Mane.Model.CommercialRentLease", b =>
                {
                    b.Property<int>("property_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AvailableFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DepositNegotiable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdealFor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Lift")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("PaintItAfterTenure")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Parking")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PropertyOn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Security")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("StreetArea")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Washrooms")
                        .HasColumnType("int");

                    b.Property<decimal?>("built_up_area")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("clean_it_after_tenure")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("clean_it_before_tenure")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("expected_deposit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("expected_rent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("lease_duration")
                        .HasColumnType("int");

                    b.Property<bool?>("power_backup")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("property_age")
                        .HasColumnType("int");

                    b.Property<bool?>("rent_negotiable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("water_storage")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("property_id");

                    b.ToTable("CommercialRentLease");
                });

            modelBuilder.Entity("My_Mane.Model.HouseRent", b =>
                {
                    b.Property<int>("property_id")
                        .HasColumnType("int");

                    b.Property<int?>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<string>("BhkType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("BuiltUpArea")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("ExpectedDeposit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ExpectedRent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Facing")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Furnishing")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("NonVegAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Parking")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PreferredTenants")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("RentNegotiable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("available_from")
                        .HasColumnType("datetime(6)");

                    b.HasKey("property_id");

                    b.ToTable("HouseRent");
                });

            modelBuilder.Entity("My_Mane.Model.Owner", b =>
                {
                    b.Property<int>("owner_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("owner_id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("owner_id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("My_Mane.Model.PG", b =>
                {
                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("AvailableAmenities")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AvailableFor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("AvailableFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AvailableServices")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BeddingDetails")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("ExpectedDeposit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ExpectedRent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool?>("FoodIncluded")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan?>("GateClosingTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("LandmarkStreet")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Parking")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PgHostelRules")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PreferredGuests")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoomAmenities")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Security")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("PropertyId");

                    b.ToTable("PG");
                });

            modelBuilder.Entity("My_Mane.Model.Property", b =>
                {
                    b.Property<int>("property_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("property_id"));

                    b.Property<bool>("admin_approval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("owner_id")
                        .HasColumnType("int");

                    b.Property<string>("property_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("property_id");

                    b.HasIndex("owner_id");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("My_Mane.Model.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserInfoNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("My_Mane.Model.CommercialRentLease", b =>
                {
                    b.HasOne("My_Mane.Model.Property", "Property")
                        .WithMany()
                        .HasForeignKey("property_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("My_Mane.Model.HouseRent", b =>
                {
                    b.HasOne("My_Mane.Model.Property", "Property")
                        .WithMany()
                        .HasForeignKey("property_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("My_Mane.Model.PG", b =>
                {
                    b.HasOne("My_Mane.Model.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("My_Mane.Model.Property", b =>
                {
                    b.HasOne("My_Mane.Model.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("owner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
